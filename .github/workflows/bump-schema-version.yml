name: Bump Manifest Schema Version

on:
  workflow_dispatch:

jobs:
  bump:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: DeterminateSystems/nix-installer-action@main
        with:
          determinate: true

      - uses: DeterminateSystems/flakehub-cache-action@main

      - name: Fetch latest release manifest
        id: latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          api_url="https://api.github.com/repos/${{ github.repository }}/releases/latest"
          response=$(curl -sSL \
            -H "authorization: Bearer $GITHUB_TOKEN" \
            -H "accept: application/vnd.github+json" \
            "$api_url")
          tag=$(jq -r '.tag_name' <<<"$response")
          if [ -z "$tag" ] || [ "$tag" = "null" ]; then
            echo "No releases found; run the remote-sync workflow first." >&2
            exit 1
          fi
          manifest_url=$(jq -r '.assets[] | select(.name == "manifest.yaml") | .browser_download_url' <<<"$response")
          if [ -z "$manifest_url" ] || [ "$manifest_url" = "null" ]; then
            echo "manifest.yaml asset not found in latest release." >&2
            exit 1
          fi
          mkdir -p artifacts
          curl -sSL \
            -H "authorization: Bearer $GITHUB_TOKEN" \
            "$manifest_url" \
            -o artifacts/manifest.yaml
          echo "tag=$tag" >> "$GITHUB_OUTPUT"
          echo "manifest_path=artifacts/manifest.yaml" >> "$GITHUB_OUTPUT"

      - name: Bump schema version
        id: bump
        run: |
          set -euo pipefail
          manifest_path="${{ steps.latest.outputs.manifest_path }}"
          OUTPUT=$(nix develop --command cargo run --quiet --bin bump-schema-version "$manifest_path" src/manifest.rs)
          echo "$OUTPUT"
          PREVIOUS=$(grep '^previous=' <<< "$OUTPUT" | head -n1 | cut -d= -f2)
          NEXT=$(grep '^next=' <<< "$OUTPUT" | head -n1 | cut -d= -f2)
          echo "previous=$PREVIOUS" >> "$GITHUB_OUTPUT"
          echo "next=$NEXT" >> "$GITHUB_OUTPUT"

      - name: Show manifest diff
        run: git diff

      - name: Upload updated manifest to release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.latest.outputs.tag }}
          files: |
            ${{ steps.latest.outputs.manifest_path }}
          overwrite: true

      - name: Configure Git
        if: github.ref == 'refs/heads/main'
        env:
          CI_GIT_USER: ${{ secrets.CI_GIT_USER }}
          CI_GIT_EMAIL: ${{ secrets.CI_GIT_EMAIL }}
        run: |
          set -euo pipefail
          if [ -z "${CI_GIT_USER:-}" ] || [ -z "${CI_GIT_EMAIL:-}" ]; then
            echo "CI_GIT_USER and CI_GIT_EMAIL secrets must be set to commit." >&2
            exit 1
          fi
          git config user.name "$CI_GIT_USER"
          git config user.email "$CI_GIT_EMAIL"
          git add src/manifest.rs

      - name: Commit schema bump
        if: github.ref == 'refs/heads/main'
        env:
          NEXT: ${{ steps.bump.outputs.next }}
        run: |
          set -euo pipefail
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "bump manifest schema version to ${NEXT}"
          git push origin "${GITHUB_REF#refs/heads/}"
