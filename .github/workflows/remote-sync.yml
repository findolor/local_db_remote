name: Remote Sync

on:
  workflow_dispatch:

concurrency:
  group: remote-sync
  cancel-in-progress: false

env:
  CLI_BINARY_URL: ${{ vars.CLI_BINARY_URL }}
  SETTINGS_YAML_URL: ${{ vars.SETTINGS_YAML_URL }}
  HYPERRPC_API_TOKEN: ${{ secrets.HYPERRPC_API_TOKEN }}

jobs:
  run-sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          determinate: true
      - uses: DeterminateSystems/flakehub-cache-action@main
      - name: Determine release metadata
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            tag="sync-${GITHUB_RUN_ID}"
            echo "RELEASE_TAG=$tag" >> "$GITHUB_ENV"
            echo "RELEASE_NAME=Remote Sync $tag" >> "$GITHUB_ENV"
            echo "CREATE_RELEASE=true" >> "$GITHUB_ENV"
          else
            echo "CREATE_RELEASE=false" >> "$GITHUB_ENV"
          fi
      - name: Run sync process
        run: nix develop --command cargo run --release
      - name: Publish release assets
        if: env.CREATE_RELEASE == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: ${{ env.RELEASE_NAME }}
          target_commitish: ${{ github.sha }}
          files: |
            data/manifest.yaml
            data/*.sql.gz
